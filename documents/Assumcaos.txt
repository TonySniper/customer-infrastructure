

Contexto do cliente

-10 aplicacoes wordpress replicados em dois servidores, o que da 20 aplicacoes no total 
-1 banco de dados replicado em 2 servidores atras de um HA proxy pra ter HA
-Estes servidores sao gerenciado pelo proprio cliente
-Alguns dos sites cresceram em popularidade e experienciam instabilidades em momentos especificos do dia devido ao alto trafego inesperado de usuarios
-O cliente gostaria de migrar essas aplicacoes para a nuvem publica
-Somente aplicacoes wordpress serao desenvolvidas
-5 aplicacoes serao add em doze meses.

Requisitos do cliente

-Alta disponibilidade HA
-Escalabilidade para lidar com sudden trafego alto de usuarios sem passar mal (autoscaling)
-Flexibilidade para adicionar novas aplicacoes na nuvem sem esforco  (blz)
-Futuro prova (So meter mais processador no app servico plano)

Proposta tecnica

-Deploy a aplicacao em duas regioes diferentes
-Database server compartilhado entre todas as aplicacoes. Possui failover group em outra regiao - shared (failover dream morreu, ver abaixo)
-Azure front door para gerenciar trafego para aplicacao mais proxima geograficamente - shared
-Storage account GRS por aplicacao para armazenamento de media
-Azure CDN (ou front door) com caching para entrega da midia - shared
-KeyVault para guardar informacoes/secrets da aplicacao - Acho que sera shared, n sei ainda 

Azure specifics

-Aplicacoes serao WebApps com PHP runtime (em andamento)
-Autoscaling pros webapps no app service plan
-RBAC pro KeyVault; RBAC remove o requerimento de credenciais
-Alertas pra coisas duvidosas com azure monitor
-Db sera MySQL no Azure com failover groups. 1 Para todos apps 
-Storage account GRS ou LRS. 1 por app
-Azure front door com CDN (talvez trocar cdn pelo Azure CDN)
-Ainda nao foi nada decidido sobre VNETs, talvez 1 vnet por regiao
-Talvez vnet ja era, vamo deixa pra dps 
-Recovery Services Vault para back up do banco ou de alguma coisa (pesquisar sobre)
-Monitoramento com Application Insights - OUT porque app insights so pra .net app;
-MariaDB ou MySQL pro db server?

-Availability Tests
-DB mysql com geo redundant backup
-1 VNET por regiao mesmo
-Lembrar de mencionar que dev test e prod sao 3 subscriptions diferentes, porem os templates sao para 1 subscription so pra agilizar
-CDN acho que sera Azure CDN mesmo pq qnd vc carrega um html vc tem o link da img do blob storage e ai o Azure CDN se vira pra achar o point of presence mais proximo, entao sera azure cdn msm por causa do storage account
-Ainda falando de storage account, pasta wp-content parece ser a pasta das midias, entao jogar essa pasta no storage account figurativamente no devops desenhos <- Plugin do wordpress se vira
-Recovery Services Vault sem utilizacao. Verificar se ele funciona pro mysql
-App insights possivel

-DevTest Labs pra dev e test (n sei nd vou so citar)

ALTERNATIVAS
-Hostear front end no blobstorage (static website) e entregar por CDN. (ex: angular site que faz API calls). N sei como eh o back end do wordpress, precisaria de mais tempo pra entender como wordpress funciona. PHP server eh necessario, mas afinal eh tudo estatico? Creio que nao.
-Kubernetes e AKS. Containerizar td o stack e jogar la no AKS e de la se vira pra autoscalling e etc. 
-Azure Container Instances. Melhor nao
-VMSS. Mais baratos porem mto management pra cuidar do VMSS
-2 DB servers para redundancia e back up. Primario smp ativo e secundario fica ativo qnd primario morrer; transicao seria feita por Azure Automation Accounts ou LogicApps (c/ eventhubs event grid ou sei la).
-Ainda falando dos 2 DB serves acima, pra manter eles com dados parecidos, a cada X horas rodar um job que faz um backup do DB primario, joga o .bac numa storage account, qnd esse storage account for modificado, LogicApp/EventGrid/EventHub (eu nunca sei qual eh qual) triggera algo que sobe o .bac pro DB secundario. Mto feio porem fazer o que.
-O msm pode ser dito pra storage account. So tem 1 agr com alguma redundancia, mas creio que isso n da HA.

Coisas

-Front door CDN eh o dobro do preco do azuro CDN
-HA para CDN: 2 CDN c/ diferentes providers (ex: MS + Akamai) e um trafic manager/front door em cima
-Ver se recovery services vaults eh util pra algo <- N eh
-Dashboard de metricas bacanas (n tera)
-Separar app insights creation do webapps <- nao mais

Qq falta fazer

-Availability Tests
-Add ALERTAS
-Add action groups pros alertas ai de cima (mandar um email e ok)
-Autoscale email alerts
-Metrica alerts para: banco/server - app - storage continhas? - porta da frente? - cdn?
-Double check back up do storage account <- ta lrz (n e backup)
-Pensar como caraios ter HA no banco ou algum backup (manda um ps fazer tlvz)
-SeguranÃ§a <- n vai rola pelo visto
-TAGS <- sei n
-RBAC entre AppService -> KeyVault

Oq ta feito

-Auto scaling 
-Reestruturar como os parametros tao sendo passado no arm template pq ta virando putaria isso ja 
-Fazer um arm template de "deploy td" decente. 
-Arrumar o deploy shared e deploy non shared arm template
-Add front door (wip) + w/e config q ele precicsa pros app
-Storage account ligando no webapp ou vice versa
-Separar db creation do server creation 
-CDN com Azuro CDN 